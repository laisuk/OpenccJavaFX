name: JPackage (Linux / Windows / macOS)

on:
  workflow_dispatch:

jobs:
  jpackage:
    name: jpackage (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            os_tag: linux
            gradle_cmd: ./gradlew
          - os: windows-latest
            os_tag: windows
            gradle_cmd: .\gradlew.bat
          - os: macos-latest
            os_tag: macos
            gradle_cmd: ./gradlew

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 17 (with jpackage)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # ---------- Linux deps (Ubuntu 24.04 uses libasound2t64)
      - name: Install Linux runtime deps
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          if ! sudo apt-get install -y --no-install-recommends libasound2t64; then
            sudo apt-get install -y --no-install-recommends libasound2 || true
          fi
          sudo apt-get install -y --no-install-recommends \
            libgtk-3-0 libx11-6 libxext6 libxrender1 libxtst6 libxi6 libgl1 libglib2.0-0 \
            libfreetype6 libfontconfig1 libxkbcommon-x11-0 \
            fakeroot rpm patchelf zip

      # ---------- Windows: WiX for MSI
      - name: Install WiX Toolset (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install wixtoolset --no-progress -y
          $wixPath = "C:\Program Files (x86)\WiX Toolset v3.14\bin"
          if (-not (Test-Path $wixPath)) { $wixPath = "C:\Program Files (x86)\WiX Toolset v3.11\bin" }
          if (-not (Test-Path $wixPath)) { throw "WiX bin folder not found." }
          "WIX=$wixPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          $wixPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          & "$wixPath\candle.exe" -? | Out-Null
          & "$wixPath\light.exe"  -? | Out-Null

      - name: Make gradlew executable (non-Windows)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: chmod +x gradlew

      - name: Show Java & Gradle versions
        shell: bash
        if: matrix.os != 'windows-latest'
        run: |
          java -version
          ${{ matrix.gradle_cmd }} --version

      - name: Show Java & Gradle versions (Windows)
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: |
          java -version
          ${{ matrix.gradle_cmd }} --version

      # ---------- Build & Package (split by OS to avoid shell mixing)

      - name: Build (Windows MSI via jpackage)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          ${{ matrix.gradle_cmd }} --no-daemon clean jpackage

      - name: Build (Linux app-image + portable zip)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          ${{ matrix.gradle_cmd }} --no-daemon clean jpackageImage zipAppImage

      - name: Build (macOS app-image + portable zip)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          ${{ matrix.gradle_cmd }} --no-daemon clean jpackageImage zipAppImage

      # ---------- Artifacts

      - name: Upload app image folder
        uses: actions/upload-artifact@v4
        with:
          name: app-image-${{ matrix.os_tag }}
          path: build/jpackage/**
          if-no-files-found: ignore

      - name: Upload portable zip
        uses: actions/upload-artifact@v4
        with:
          name: portable-zip-${{ matrix.os_tag }}
          path: build/distributions/*.zip
          if-no-files-found: ignore

      - name: Upload native installers (msi/deb/rpm/dmg/pkg)
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os_tag }}
          path: |
            build/jpackage/*.msi
            build/jpackage/*.deb
            build/jpackage/*.rpm
            build/jpackage/*.pkg
            build/jpackage/*.dmg
          if-no-files-found: ignore
